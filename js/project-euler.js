/************************** PROBLEM 1 **************************/
/* If we list all the natural numbers below 10 that are        */
/* multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of       */
/* these multiples is 23.                                      */
/* Find the sum of all the multiples of 3 or 5 below 1000.     */

// Given a postive integer lim, returns the sum of all the multiples of 3
// and 5 below lim.
function multiples(lim) {
    var sum = 0;
    for (var i = 0; i < lim; i++) {
        if (i%3 === 0 || i%5 === 0) sum += i;
    }
    return sum;
}



/************************** PROBLEM 2 ***************************/
/* Each new term in the Fibonacci sequence is generated by      */
/* adding the previous two terms. By starting with 1 and 2,     */
/* the first 10 terms will be:                                  */
/* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...                       */
/* By considering the terms in the Fibonacci sequence whose     */
/* values do not exceed four million, find the sum of the       */
/* even-valued terms..                                          */

// Given a postiive integer lim, returns the sum of all even-valued
// terms in the Fibonacci sequence whose values do not exceed lim.
function even_fibonacci(lim) {
    var prev = 1;
    var curr = 2;
    var temp;
    var sum = 0;
    while (curr < lim) {
        if (curr%2 === 0) {
            sum += curr;
        }
        temp = curr;
        curr = prev + curr;
        prev = temp;
    }
    return sum;
}



/************************** PROBLEM 3 ***************************/
/* The prime factors of 13195 are 5, 7, 13 and 29.              */
/* What is the largest prime factor of the number 600851475143? */

// Helper function that given a positive integer, returns true if it is prime and
// false if it is not.
function is_prime(num) {
    if (num === 1) return true;
    if (num === 2) return true;
    for (var i = 2; i <= Math.floor(Math.sqrt(num)); i++) {
        if (num%i === 0) return false;
    }
    return true;
}

// Given a positive integer num, returns the largest prime factor of num.
function largest_prime_factor(num) {
    for (var i = Math.floor(Math.sqrt(num)); i > 1; i--) {
        if (num%i === 0) {
            if (is_prime(i)) return i;
        }
    }
    return 1;
}
